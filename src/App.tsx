import { Routes, Route } from "react-router-dom";
import { useState, useEffect } from "react";
import { motion } from 'framer-motion';
import Home from "@/pages/Home";
import ReportResult from "@/pages/ReportResult";
import Pay from "@/pages/Pay";
import LanguageSelector from '@/components/LanguageSelector';
import { AuthContext } from '@/contexts/authContext';

/* 使用 src/images 中的本地图，确保打包后地址正确 */
import fvLogoUrl from "@/images/future-vision-logo.png";
import mscLogoUrl from "@/images/msc-hk-logo.png";

/* =========================
   PDF 导出配置（可通过 window.__fvPdfConfig 覆盖）
========================= */
type PdfConfig = {
  cover?: {
    title?: string;            // 封面主标题
    subtitle?: string;         // 副标题（如客户名/选品/选国）
    clientName?: string;       // 客户名（可选，单独一行）
    dateText?: string;         // 生成时间（默认：今天）
    extraNote?: string;        // 额外说明（可选）
  };
  back?: {
    headline?: string;         // 尾页大标题
    email?: string;
    phone?: string;
    website?: string;
    address?: string;          // 可选：地址一行
    qrImageUrl?: string;       // 二维码图片地址（http(s) 或本地路径），自动转 DataURL
    qrCaption?: string;        // 二维码下方说明
    copyrightOwner?: string;   // 版权归属名（默认 GlobalRisk）
  };
  footer?: {
    includeCover?: boolean;    // 封面是否绘制页脚（默认 false）
    includeBack?: boolean;     // 封底是否绘制页脚（默认 false）
    numberCover?: boolean;     // 封面是否计入页码（默认 false）
    numberBack?: boolean;      // 封底是否计入页码（默认 false）
  };
  enableCover?: boolean;       // 是否添加封面（默认 true）
  enableBack?: boolean;        // 是否添加封底（默认 true）
};

declare global {
  interface Window {
    __fvAddPdfFooter?: (pdf: any) => Promise<void>;
    __fvPdfConfig?: PdfConfig;
  }
}

/* =========================
   通用工具
========================= */

const _dataURLCache: Record<string, string> = {};
async function toDataURL(url: string): Promise<string> {
  if (!url) return "";
  if (_dataURLCache[url]) return _dataURLCache[url];
  const res = await fetch(url, { credentials: "same-origin" });
  const blob = await res.blob();
  const data = await new Promise<string>((resolve) => {
    const reader = new FileReader();
    reader.onload = () => resolve(reader.result as string);
    reader.readAsDataURL(blob);
  });
  _dataURLCache[url] = data;
  return data;
}

function getPageCount(pdf: any): number {
  if (pdf && typeof pdf.getNumberOfPages === "function") return pdf.getNumberOfPages();
  if (pdf?.internal && typeof pdf.internal.getNumberOfPages === "function") return pdf.internal.getNumberOfPages();
  return Array.isArray((pdf as any)?.pages) ? (pdf as any).pages.length : 0;
}

function setPage(pdf: any, n: number) {
  if (typeof pdf.setPage === "function") pdf.setPage(n);
  else if (typeof pdf.gotoPage === "function") pdf.gotoPage(n);
}

/* =========================
   封面 / 封底（增强版）
========================= */

type CoverInputs = {
  fvData: string;
  mscData: string;
  title?: string;
  subtitle?: string;
  clientName?: string;
  dateText?: string;
  extraNote?: string;
};

async function addCoverPage(pdf: any, inputs: CoverInputs) {
  const { fvData, mscData, title, subtitle, clientName, dateText, extraNote } = inputs;

  // 在最前插入空白页，并绘制封面
  pdf.insertPage(1);
  setPage(pdf, 1);

  const W = pdf.internal.pageSize.getWidth();
  const H = pdf.internal.pageSize.getHeight();

  // 标题区
  pdf.setTextColor(34, 34, 64);
  pdf.setFontSize(26);
  pdf.text(title || "ESG Risk Report", W / 2, H * 0.28, { align: "center" });

  // 副标题与客户名
  let y = H * 0.28 + 14;
  pdf.setFontSize(14);
  pdf.setTextColor(70);
  if (subtitle) {
    pdf.text(subtitle, W / 2, y, { align: "center" });
    y += 9;
  }
  if (clientName) {
    pdf.text(clientName, W / 2, y, { align: "center" });
    y += 9;
  }

  // 日期
  const dateLine = dateText || new Date().toLocaleDateString();
  pdf.setFontSize(11);
  pdf.setTextColor(100);
  pdf.text(dateLine, W / 2, y + 6, { align: "center" });

  // 中部双 Logo（并列）
  const logoH = Math.max(H * 0.06, 34);
  const logoW = logoH * 2.6;
  const gap = Math.max(12, W * 0.02);
  const logosTotalW = logoW * 2 + gap;
  const startX = (W - logosTotalW) / 2;
  const logosY = H * 0.48;

  pdf.addImage(fvData, "PNG", startX, logosY, logoW, logoH);
  pdf.addImage(mscData, "PNG", startX + logoW + gap, logosY, logoW, logoH);

  // 底部说明
  const footerY = H - 58;
  pdf.setFontSize(12);
  pdf.setTextColor(90);
  pdf.text("Generated by Future Vision · MSC HK", W / 2, footerY, { align: "center" });

  if (extraNote) {
    pdf.setFontSize(10);
    pdf.setTextColor(110);
    pdf.text(extraNote, W / 2, footerY + 14, { align: "center" });
  }
}

type BackInputs = {
  email?: string;
  phone?: string;
  website?: string;
  address?: string;
  qrData?: string;           // 已是 DataURL 的二维码
  qrCaption?: string;
  copyrightOwner?: string;
};

function addBackPage(pdf: any, inputs: BackInputs) {
  const {
    email = "jinxia@mscfv.com",
    phone = "+86 189 8948 5442",
    website = "www.mscfv.com",
    address,
    qrData,
    qrCaption = "Scan for more information",
    copyrightOwner = "GlobalRisk",
  } = inputs;

  pdf.addPage();
  const pageIndex = getPageCount(pdf);
  setPage(pdf, pageIndex);

  const W = pdf.internal.pageSize.getWidth();
  const H = pdf.internal.pageSize.getHeight();

  // 标题
  pdf.setFontSize(18);
  pdf.setTextColor(40, 40, 80);
  pdf.text("Contact Us", W / 2, H * 0.26, { align: "center" });

  // 联系方式
  pdf.setFontSize(12);
  pdf.setTextColor(70);
  let y = H * 0.26 + 26;
  const lineGap = 18;
  pdf.text(`Email: ${email}`, W / 2, y, { align: "center" }); y += lineGap;
  pdf.text(`Phone: ${phone}`, W / 2, y, { align: "center" }); y += lineGap;
  pdf.text(`Website: ${website}`, W / 2, y, { align: "center" }); y += lineGap;

  if (address) {
    pdf.text(`Address: ${address}`, W / 2, y, { align: "center" });
    y += lineGap;
  }

  // 二维码（可选）
  if (qrData) {
    const qrSize = Math.max(80, Math.min(W * 0.24, 120));
    const qrX = W / 2 - qrSize / 2;
    const qrY = y + 12;
    pdf.addImage(qrData, "PNG", qrX, qrY, qrSize, qrSize);

    pdf.setFontSize(10);
    pdf.setTextColor(90);
    pdf.text(qrCaption, W / 2, qrY + qrSize + 12, { align: "center" });
  }

  // 版权
  pdf.setFontSize(10);
  pdf.setTextColor(100);
  pdf.text(`© ${new Date().getFullYear()} ${copyrightOwner}. All rights reserved.`, W / 2, H - 54, { align: "center" });
}

/* =========================
   页脚绘制（Logo + 页码）
========================= */

type FooterOptions = {
  includeCover?: boolean;     // 封面是否绘制页脚（默认 false）
  includeBack?: boolean;      // 封底是否绘制页脚（默认 false）
  numberCover?: boolean;      // 封面是否计入页码（默认 false）
  numberBack?: boolean;       // 封底是否计入页码（默认 false）
};

async function drawFooterForPage(pdf: any, fvData: string, mscData: string, pageIndex: number, pageNumText: string) {
  setPage(pdf, pageIndex);

  const W = pdf.internal.pageSize.getWidth();
  const H = pdf.internal.pageSize.getHeight();

  // 根据页面尺寸自适应
  const marginX = Math.max(W * 0.04, 14);
  const footerH = Math.max(H * 0.045, 18);
  const y = H - footerH;

  // 顶部分隔线
  pdf.setDrawColor(230, 230, 230);
  pdf.line(marginX, y, W - marginX, y);

  // 左侧 Logo 组
  const logoH = footerH * 0.62;
  const logoW = logoH * 2.4;
  const gap = Math.max(footerH * 0.18, 6);
  const leftBaseY = y + (footerH - logoH) / 2;

  let cursorX = marginX + 2;
  pdf.addImage(fvData, "PNG", cursorX, leftBaseY, logoW, logoH);
  cursorX += logoW + gap / 1.5;

  // 竖线
  pdf.setDrawColor(200, 200, 200);
  pdf.line(cursorX, leftBaseY, cursorX, leftBaseY + logoH);
  cursorX += gap / 1.5;

  pdf.addImage(mscData, "PNG", cursorX, leftBaseY, logoW, logoH);

  // 右侧页码
  pdf.setFontSize(10);
  pdf.setTextColor(80, 80, 80);
  const textY = y + footerH / 2 + 3;
  pdf.text(pageNumText, W - marginX, textY, { align: "right" });
}

/* =========================
   兜底导出钩子：插入封面/封底 + 绘制页脚
   使用方式：
   html2pdf().from(root).set(...).toPdf().get('pdf').then(async pdf => {
     await window.__fvAddPdfFooter?.(pdf);
     pdf.save('Report.pdf');
   })

   运行时可配置（示例）：
   window.__fvPdfConfig = {
     enableCover: true,
     enableBack: true,
     cover: {
       title: "Future Vision · ESG 风险报告",
       subtitle: "Selected Products / Countries",
       clientName: "Client: Xiamen C&D Group",
       dateText: "Generated on 2025-08-22",
       extraNote: "Confidential · For internal use only"
     },
     back: {
       email: "service@futurevision.ai",
       phone: "+852 1234 5678",
       website: "https://futurevision.ai",
       address: "Room 1234, Science Park, Hong Kong",
       qrImageUrl: "/images/contact-qr.png",     // 或 https://.... 皆可
       qrCaption: "Follow us / Contact support",
       copyrightOwner: "Future Vision Limited"
     },
     footer: {
       includeCover: false,
       includeBack: false,
       numberCover: false,
       numberBack: false
     }
   }
========================= */

async function injectPdfFooter(pdf: any) {
  if (!pdf || !pdf.internal) return;

  const cfg: PdfConfig = {
    enableCover: true,
    enableBack: true,
    footer: {
      includeCover: false,
      includeBack: false,
      numberCover: false,
      numberBack: false,
    },
    ...window.__fvPdfConfig, // 合并用户配置
  };

  const [fvData, mscData] = await Promise.all([toDataURL(fvLogoUrl), toDataURL(mscLogoUrl)]);

  // 1) 插入封面
  if (cfg.enableCover) {
    await addCoverPage(pdf, {
      fvData,
      mscData,
      title: cfg.cover?.title,
      subtitle: cfg.cover?.subtitle,
      clientName: cfg.cover?.clientName,
      dateText: cfg.cover?.dateText,
      extraNote: cfg.cover?.extraNote,
    });
  }

  // 2) （此时）总页数（封底还未添加）
  let totalNow = getPageCount(pdf);
  if (!totalNow) return;

  // 3) 页脚页码范围（正文页）
  const firstPage = cfg.enableCover ? 2 : 1;
  const lastPageBeforeBack = totalNow; // 还未添加封底

  // 4) 页码编号（默认不含封面/封底）
  const totalContentPages =
    totalNow - (cfg.enableCover && !cfg.footer?.numberCover ? 1 : 0);

  // 5) 绘制页脚（正文页）
  for (let i = firstPage; i <= lastPageBeforeBack; i++) {
    const isCover = i === 1;
    const willNumberThisPage = !(isCover && !cfg.footer?.numberCover);
    const pageNumber = willNumberThisPage
      ? (cfg.enableCover && !cfg.footer?.numberCover ? i - 1 : i)
      : 0;

    const pageText = willNumberThisPage
      ? `Page ${pageNumber} / ${totalContentPages}`
      : "";

    const shouldDrawFooter = !(i === 1 && !cfg.footer?.includeCover);
    if (shouldDrawFooter) {
      await drawFooterForPage(pdf, fvData, mscData, i, pageText);
    }
  }

  // 6) 插入封底
  if (cfg.enableBack) {
    // 如果设置了二维码 URL，则先转为 DataURL
    let qrData = "";
    if (cfg.back?.qrImageUrl) {
      try {
        qrData = await toDataURL(cfg.back.qrImageUrl);
      } catch {
        qrData = "";
      }
    }

    addBackPage(pdf, {
      email: cfg.back?.email,
      phone: cfg.back?.phone,
      website: cfg.back?.website,
      address: cfg.back?.address,
      qrData,
      qrCaption: cfg.back?.qrCaption,
      copyrightOwner: cfg.back?.copyrightOwner,
    });

    const endIndex = getPageCount(pdf);
    const isBackNumbered = !!cfg.footer?.numberBack;
    const denom = totalContentPages + (isBackNumbered ? 1 : 0);

    const pageText = isBackNumbered ? `Page ${denom} / ${denom}` : "";

    if (cfg.footer?.includeBack) {
      await drawFooterForPage(pdf, fvData, mscData, endIndex, pageText);
    }
  }
}

/* 暴露到 window，供导出流程调用 */
export default function App() {
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [hasPaid, setHasPaid] = useState(() => {
    if (typeof window === "undefined") return false;
    return window.localStorage.getItem("hasPaid") === "1";
  });
  const [showHeader, setShowHeader] = useState(true);
  const [lastScrollY, setLastScrollY] = useState(0);

  // 屏幕端：滚动时隐藏/显示顶部导航
  useEffect(() => {
    const handleScroll = () => {
      const currentScrollY = window.scrollY;
      setShowHeader(!(currentScrollY > 50 && currentScrollY > lastScrollY));
      setLastScrollY(currentScrollY);
    };
    window.addEventListener('scroll', handleScroll, { passive: true });
    return () => window.removeEventListener('scroll', handleScroll);
  }, [lastScrollY]);

  // 挂载导出兜底
  useEffect(() => {
    if (typeof window !== "undefined") {
      window.__fvAddPdfFooter = injectPdfFooter;
    }
  }, []);

  useEffect(() => {
    if (typeof window === "undefined") return;
    const handler = () => setHasPaid(window.localStorage.getItem("hasPaid") === "1");
    window.addEventListener("storage", handler);
    return () => window.removeEventListener("storage", handler);
  }, []);

  const logout = () => setIsAuthenticated(false);

  return (
    <AuthContext.Provider value={{ isAuthenticated, setIsAuthenticated, logout }}>
      {/* 顶部导航（打印隐藏） */}
      <motion.header
        initial={{ y: -100, opacity: 0 }}
        animate={{ y: showHeader ? 0 : -100, opacity: showHeader ? 1 : 0 }}
        transition={{ type: 'spring', stiffness: 300, damping: 30 }}
        className="no-print-only fixed top-0 left-0 right-0 z-40 w-full bg-gradient-to-r from-indigo-600 to-purple-600 shadow-lg"
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <div className="flex items-center">
              <img
                src="https://lf-code-agent.coze.cn/obj/x-ai-cn/238114214402/attachment/白字透明logo_20250728174823.png"
                alt="Logo"
                className="h-8 mr-2"
              />
            </div>
            <div className="flex items-center space-x-4">
              <LanguageSelector />
            </div>
          </div>
        </div>
      </motion.header>

      {/* 主内容 */}
      <main className="pt-20 min-h-screen">
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/report" element={<ReportResult />} />
          <Route path="/pay" element={<Pay />} />
        </Routes>
      </main>

      {/* 屏幕端页脚（打印隐藏）——原样保留 */}
      <footer className="no-print-only bg-slate-900 text-white py-12">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
            <div>
              <div className="flex items-center mb-4">
                <img
                  src="https://lf-code-agent.coze.cn/obj/x-ai-cn/238114214402/attachment/白字透明logo_20250728174823.png"
                  alt="Logo"
                  className="h-8 mr-2"
                />
              </div>
              <p className="text-slate-400 text-sm">
                提供专业的企业出海风险评估与分析服务，助力企业成功开拓国际市场。
              </p>
            </div>

            <div>
              <h3 className="text-lg font-semibold mb-4">服务</h3>
              <ul className="space-y-2 text-slate-400">
                <li><a href="#" className="hover:text-white transition-colors">风险评估</a></li>
                <li><a href="#" className="hover:text-white transition-colors">市场分析</a></li>
                <li><a href="#" className="hover:text-white transition-colors">合规咨询</a></li>
                <li><a href="#" className="hover:text-white transition-colors">战略规划</a></li>
              </ul>
            </div>

            <div>
              <h3 className="text-lg font-semibold mb-4">关于我们</h3>
              <ul className="space-y-2 text-slate-400">
                <li><a href="#" className="hover:text-white transition-colors">公司简介</a></li>
                <li><a href="#" className="hover:text-white transition-colors">专家团队</a></li>
                <li><a href="#" className="hover:text-white transition-colors">客户案例</a></li>
                <li><a href="#" className="hover:text-white transition-colors">联系我们</a></li>
              </ul>
            </div>

            <div>
              <h3 className="text-lg font-semibold mb-4">联系方式</h3>
              <ul className="space-y-2 text-slate-400">
                <li className="flex items-center">
                  <i className="fa-solid fa-envelope mr-2 text-blue-400"></i>
                  <a href="mailto:contact@globalrisk.com" className="hover:text-white transition-colors">jinxia@mscfv.com</a>
                </li>
                <li className="flex items-center">
                  <i className="fa-solid fa-phone mr-2 text-blue-400"></i>
                  <a href="tel:+8610123456789" className="hover:text-white transition-colors">+86 18989485442</a>
                </li>
              </ul>
              <div className="flex space-x-4 mt-4">
                <a href="#" className="text-slate-400 hover:text-white transition-colors">
                  <i className="fa-brands fa-linkedin"></i>
                </a>
                <a href="#" className="text-slate-400 hover:text-white transition-colors">
                  <i className="fa-brands fa-twitter"></i>
                </a>
                <a href="#" className="text-slate-400 hover:text-white transition-colors">
                  <i className="fa-brands fa-facebook"></i>
                </a>
              </div>
            </div>
          </div>

          <div className="border-t border-slate-800 mt-8 pt-8 flex flex-col md:flex-row justify-between items-center">
            <p className="text-slate-500 text-sm">© {new Date().getFullYear()} GlobalRisk. 保留所有权利。</p>
            <div className="flex space-x-6 mt-4 md:mt-0">
              <a href="#" className="text-slate-500 hover:text-white text-sm transition-colors">隐私政策</a>
              <a href="#" className="text-slate-500 hover:text-white text-sm transition-colors">服务条款</a>
              <a href="#" className="text-slate-500 hover:text-white text-sm transition-colors">Cookie政策</a>
            </div>
          </div>
        </div>
      </footer>
    </AuthContext.Provider>
  );
}
